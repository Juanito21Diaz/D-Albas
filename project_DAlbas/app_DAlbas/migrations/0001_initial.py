# Generated by Django 4.2.2 on 2023-10-05 02:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "fotoUsuario",
                    models.ImageField(
                        blank=True,
                        db_comment="Foto del Usuario",
                        null=True,
                        upload_to="usuarios/",
                    ),
                ),
                (
                    "tipoUsuario",
                    models.CharField(
                        choices=[
                            ("Administrativo", "Administrativo"),
                            ("Cliente", "Cliente"),
                        ],
                        db_comment="Nombre del Tipo de usuario",
                        max_length=15,
                    ),
                ),
                (
                    "estadoUsuario",
                    models.CharField(
                        choices=[("A", "Activo"), ("I", "Inactivo")],
                        db_comment="Estado de los usuarios, deben estar activos para poder ingresar",
                        default="Activo",
                        max_length=10,
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Categorias",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombreCategoria",
                    models.CharField(
                        db_comment="Nombre de la categoria", max_length=50, unique=True
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ingredientes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombreIngrediente",
                    models.CharField(
                        db_comment="Nombre del ingrediente que se desea adicionar",
                        max_length=20,
                    ),
                ),
                (
                    "precioIngrediente",
                    models.IntegerField(db_comment="Precio unitario del ingrediente"),
                ),
                (
                    "cantidadIngrediente",
                    models.IntegerField(
                        db_comment="Cantidad del ingrediente que se adicionará"
                    ),
                ),
                (
                    "unidadMedida",
                    models.CharField(
                        db_comment="unidad de medida del ingrediente",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        db_comment="Color del ingrediente", max_length=30, null=True
                    ),
                ),
                (
                    "sabor",
                    models.CharField(
                        db_comment="tipo de sabor del ingrediente si llegase a ser necesario",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "descripcionIngrediente",
                    models.TextField(
                        db_comment="descripción detallada del ingrediente"
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tematicas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombreTematica",
                    models.CharField(
                        db_comment="Nombre de la tematica", max_length=50, unique=True
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Administradores",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "telefonoAdministrador",
                    models.CharField(
                        db_comment="Número telefono del administrador",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "cargoAdministrador",
                    models.CharField(
                        db_comment="Cargo que ocupa el administrador a registrar",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "fechaHoraCreacionAdmin",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacionAdmin",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("app_DAlbas.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Clientes",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "identificacionCliente",
                    models.CharField(
                        db_comment="Identificación del cliente, puede ser cédula o NUIP",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "telefonoCliente",
                    models.CharField(
                        db_comment="Número telefono del cliente",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "fechaHoraCreacionCliente",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_comment="Fecha y hora del registro del cliente",
                    ),
                ),
                (
                    "fechaHoraActualizacionCliente",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("app_DAlbas.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Productos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombreProducto",
                    models.CharField(db_comment="Nombre de producto", max_length=50),
                ),
                (
                    "codigoProducto",
                    models.CharField(
                        db_comment="Código unico de cada producto",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "precioProducto",
                    models.IntegerField(db_comment="precio unitario del producto"),
                ),
                (
                    "descripcionProducto",
                    models.TextField(
                        db_comment="Descripción de cada producto de la pasteleria",
                        null=True,
                    ),
                ),
                (
                    "imagenProducto",
                    models.ImageField(
                        blank=True,
                        db_comment="Imagen del producto",
                        null=True,
                        upload_to="productos/",
                    ),
                ),
                (
                    "qrProducto",
                    models.ImageField(
                        blank=True,
                        db_comment="Imagen del código qr del producto",
                        null=True,
                        upload_to="codigos_qr/",
                    ),
                ),
                (
                    "unidadMedidaProducto",
                    models.CharField(
                        choices=[
                            ("Unidad", "Unidad"),
                            ("Media libra", "Media libra"),
                            ("Libra", "Libra"),
                            ("Libra y media", "Libra y media"),
                            ("Dos Libras", "Dos libras"),
                        ],
                        db_comment="Cantidad o peso de las tortas",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "saborProducto",
                    models.CharField(
                        choices=[
                            ("Arequipe", "Arequipe"),
                            ("Vainilla", "Vainilla"),
                            ("Chocolate", "Chocolate"),
                            ("Ponque", "Ponque"),
                        ],
                        db_comment="Tipo de sabor de la torta",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "estadoProducto",
                    models.CharField(
                        choices=[("A", "Activo"), ("I", "Inactivo")],
                        db_comment="Estado de los productos",
                        default="Activo",
                        max_length=10,
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "categoriaProducto",
                    models.ForeignKey(
                        db_comment="Fk de la categoria a la que pertenece el producto",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="categoria_producto",
                        to="app_DAlbas.categorias",
                    ),
                ),
                (
                    "tematicaProducto",
                    models.ForeignKey(
                        db_comment="Fk de la tematica a la que pertenece el producto",
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tematica_producto",
                        to="app_DAlbas.tematicas",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pedidos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombreClientePedido",
                    models.CharField(
                        db_comment="nombre del cliente que quiere el pedido",
                        max_length=50,
                    ),
                ),
                (
                    "telefonoClientePedido",
                    models.CharField(
                        db_comment="Número telefono del cliente",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "fechaPedido",
                    models.DateTimeField(
                        db_comment="Fecha en que realiza el pedido",
                        default=django.utils.timezone.now,
                    ),
                ),
                (
                    "fechaHoraPedido",
                    models.DateTimeField(
                        db_comment="Día y hora en la que se requiere el pedido"
                    ),
                ),
                (
                    "metodoPago",
                    models.CharField(
                        choices=[
                            ("Transferencia", "Transferencia"),
                            ("Efectivo", "Efectivo"),
                        ],
                        db_comment="Metodos de pago disponibles",
                        max_length=20,
                    ),
                ),
                (
                    "estadoPedido",
                    models.CharField(
                        choices=[
                            ("Pendiente", "Pendiente"),
                            ("En proceso", "En proceso"),
                            ("Entregado", "Entregado"),
                            ("Cancelado", "Cancelado"),
                        ],
                        db_comment="Estado",
                        default="Pendiente",
                        max_length=15,
                    ),
                ),
                (
                    "valorPedido",
                    models.IntegerField(db_comment="valor del pedido", null=True),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "userPedido",
                    models.ForeignKey(
                        db_comment="Fk del cliente que realiza el pedido",
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pedido_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DetalleProductoPedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombrePersonaDetalle",
                    models.CharField(
                        blank=True,
                        db_comment="nombre de la persona a la que se le quiere festejar",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "edadPersonaDetalle",
                    models.IntegerField(
                        blank=True, db_comment="Edad de la persona", null=True
                    ),
                ),
                (
                    "imagenPedidoDetalle",
                    models.ImageField(
                        blank=True,
                        db_comment="Foto de ejemplo de como el clinte quiere su producto, ejemplo un pastel",
                        null=True,
                        upload_to="pedidos_cliente/",
                    ),
                ),
                (
                    "pedidoDetalle",
                    models.ForeignKey(
                        db_comment="Fk del pedido ",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="detalles_producto",
                        to="app_DAlbas.pedidos",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DetallePedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cantidadProducto",
                    models.IntegerField(
                        db_comment="Cantidad de productos que se el cliente comprará"
                    ),
                ),
                (
                    "costoProductos",
                    models.IntegerField(
                        db_comment="Costo acumulable de los productos que se van a pedir"
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "detallePedido",
                    models.ForeignKey(
                        db_comment="Llave forane de pedidos",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pedido_detalle",
                        to="app_DAlbas.pedidos",
                    ),
                ),
                (
                    "detalleProducto",
                    models.ForeignKey(
                        db_comment="Llave forane de prodcutos",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="producto_detalle",
                        to="app_DAlbas.productos",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ComentariosProductos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contenidoComentarioProducto",
                    models.TextField(db_comment="Contenido del comentario"),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "puntajeComentarioProducto",
                    models.IntegerField(
                        db_comment="Puntaje de 1 a 5",
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "productoComentarioProducto",
                    models.ForeignKey(
                        db_comment="FK del producto que se va a reseñar",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="comentario_producto",
                        to="app_DAlbas.productos",
                    ),
                ),
                (
                    "usuarioComentarioProducto",
                    models.ForeignKey(
                        db_comment="FK del usuario que escribe el comentario",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="comentario_usuarioProducto",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comentarios",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contenidoComentario",
                    models.TextField(db_comment="Contenido del comentario"),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "puntajeComentario",
                    models.IntegerField(
                        db_comment="Puntaje de 1 a 5",
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "usuarioComentario",
                    models.ForeignKey(
                        db_comment="FK del usuario que escribe el comentario",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="comentario_usuario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdicionDetalle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descripcionAdicion",
                    models.TextField(
                        db_comment="Descripción detallada de la adición que se la va a hacer al pedido"
                    ),
                ),
                (
                    "valorAdicion",
                    models.IntegerField(
                        db_comment="valor que le agregará al valor del pedio por realizar un adición extra"
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "pedidoAdicion",
                    models.ForeignKey(
                        db_comment="Fk del pedido al que se le hará la adición",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pedido_adicion",
                        to="app_DAlbas.pedidos",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Abonos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fotoComprobanteAbono",
                    models.ImageField(
                        blank=True,
                        db_comment="Foto del comprobante de pago del primer abono del pedido",
                        null=True,
                        upload_to="abonos/",
                    ),
                ),
                (
                    "codigoComprobanteAbono",
                    models.CharField(
                        db_comment="Código del comprobante del pago del primer abono",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "valorAbono",
                    models.IntegerField(
                        db_comment="Valor de pago del primer abono cincuenta porciento del valor del pedido"
                    ),
                ),
                (
                    "fechaHoraCreacion",
                    models.DateTimeField(
                        auto_now_add=True, db_comment="Fecha y hora del registro"
                    ),
                ),
                (
                    "fechaHoraActualizacion",
                    models.DateTimeField(
                        auto_now=True, db_comment="Fecha y hora última actualización"
                    ),
                ),
                (
                    "pedidoAbono",
                    models.ForeignKey(
                        db_comment="Fk de la tabla pedidos",
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="abono_pedido",
                        to="app_DAlbas.pedidos",
                    ),
                ),
            ],
        ),
    ]
